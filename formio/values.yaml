## Rocket Chat image version
## ref: https://hub.docker.com/r/library/rocket.chat/tags/
##
image: samnco/formio:latest

## Specify a imagePullPolicy
## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
# imagePullPolicy: Always

## Host for the application
##
host: formio.landg.madeden.net

##
## MongoDB chart configuration
##
mongodb:
  ## MongoDB admin password
  ### ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run
  ###
  ## mongodbRootPassword:
  #
  ## MongoDB custom user and database
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#creating-a-user-and-database-on-first-run
  ##
  # mongodbUsername:
  # mongodbPassword:
  # mongodbDatabase:
  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: true
    ## mongodb data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi

# Redis password to use for the in-cluster redis service
# Redis is not exposed publically
mariadb:
  ## Use password authentication
  usePassword: true

  ## Specify password for root user
  ## Defaults to a random 10-character alphanumeric string if not set and usePassword is true
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#setting-the-root-password-on-first-run
  ##
  # mariadbRootPassword:

  ## Create a database user
  ## Password defaults to a random 10-character alphanumeric string if not set and usePassword is true
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-user-on-first-run
  ##
  mariadbUser: formio
  mariadbPassword: formio

  ## Create a database
  ## ref: https://github.com/bitnami/bitnami-docker-mariadb/blob/master/README.md#creating-a-database-on-first-run
  ##
  mariadbDatabase: formio

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## mariadb data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: standard
    accessMode: ReadWriteOnce
    size: 8Gi

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 250m

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
# resources:
#   requests:
#     memory: 512Mi
#     cpu: 300m

service:
  type: LoadBalancer
  externalPort: 80
  loadBalancerIP:

## Configure the ingress object to hook into existing infastructure
### ref : http://kubernetes.io/docs/user-guide/ingress/
###
ingress:
  enabled: false
  tls: false
  annotations:
    kubernetes.io/ingress.class: "nginx"

config: |
  {
    "port": 3001,
    "appPort": 8080,
    "host": "localhost:3001",
    "protocol": "http",
    "domain": "http://localhost:3001",
    "basePath": "",
    "mongo": "mongodb://formio-mongodb:27017/formioapp",
    "mongoSecret": "",
    "reservedForms": [
      "submission",
      "exists",
      "export",
      "role",
      "current",
      "logout",
      "import",
      "form",
      "access",
      "token"
    ],
    "jwt": {
      "secret": "IAlsoChangedYou",
      "expireTime": 240
    },
    "email": {
      "type": "sendgrid",
      "username": "sendgrid-user",
      "password": "sendgrid-pass"
    },
    "settings": {
      "office365": {
        "tenant": "",
        "clientId": "",
        "email": "",
        "cert": "",
        "thumbprint": ""
      },
      "database": {
        "mysql": {
          "host": "formio-mariadb",
          "port": "3306",
          "database": "formio",
          "user": "formio",
          "password": "formio"
        },
        "mssql": {
          "host": "",
          "port": "",
          "database": "",
          "user": "",
          "password": ""
        }
      },
      "email": {
        "gmail": {
          "auth": {
            "user": "",
            "pass": ""
          }
        },
        "sendgrid": {
          "auth": {
            "api_user": "",
            "api_key": ""
          }
        },
        "mandrill": {
          "auth": {
            "apiKey": ""
          }
        }
      }
    }
  }

